{"code": "// problem statement is in https://www.hackerrank.com/contests/university-codesprint-3/challenges/bobs-game/problem\n#include <bits/stdc++.h>\n\n/**\n *    author:  tourist\n *    created: 29.09.2017 19:08:56       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1234;\n\nchar s[N][N];\nint g[N][N];\n\nint main() {\nfreopen(\"../input_files/BobGame\", \"r\", stdin);\n  int tt;\n  scanf(\"%d\", &tt);\n  int az=89;\n  while (tt--) {\n    int n;\n    scanf(\"%d\", &n);\n    az=89;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", s[i]);\n    }\n    az=89;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (s[i][j] == 'X') {\n          g[i][j] = -1;\n          continue;\n        }\n        set<int> w;\n        if (i > 0) {\n          w.insert(g[i - 1][j]);\n        }\n        if (j > 0) {\n          w.insert(g[i][j - 1]);\n        }\n        if (i > 0 && j > 0) {\n          w.insert(g[i - 1][j - 1]);\n        }\n        g[i][j] = 0;\n        while (w.find(g[i][j]) != w.end()) {\n          g[i][j]++;\n        }\n      }\n    }\n    int ans = 0;\n    az=89;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (s[i][j] == 'K') {\n          ans ^= g[i][j];\n        }\n      }\n    }\n    az=89;\n    if (ans == 0) {\n      puts(\"LOSE\");\n    } else {\n      int cnt = 0;\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          if (s[i][j] == 'K') {\n            if (i > 0 && s[i - 1][j] != 'X') {\n              if ((g[i - 1][j] ^ g[i][j]) == ans) {\n                cnt++;\n              }\n            }\n            if (j > 0 && s[i][j - 1] != 'X') {\n              if ((g[i][j - 1] ^ g[i][j]) == ans) {\n                cnt++;\n              }\n            }\n            if (i > 0 && j > 0 && s[i - 1][j - 1] != 'X') {\n              if ((g[i - 1][j - 1] ^ g[i][j]) == ans) {\n                cnt++;\n              }\n            }\n          }\n        }\n      }\n      printf(\"WIN %d\\n\", cnt);\n    }\n  }\n  return 0;\n}\n", "label": 0.21040723981900453}
{"code": "// problem statemnt is in https://www.hackerrank.com/challenges/extra-long-factorials/problem\n#include <bits/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint mult(int size,int res[],int x)\n    {\n    int carry=0,prod;\n    for(int j=0;j<size;j++)\n        {\n        prod=res[j]*x+carry;\n        res[j]=prod%10;\n        carry=prod/10;\n    }\n    while(carry)\n        {\n        res[size]=carry%10;\n        carry=carry/10;\n        size++;\n    }\n    return size;\n}\nvoid fact(int n)\n    {\n    int i,size;\n    int res[200];\n    res[0]=1;\n    size=1;\n    for(i=2;i<=n;i++)\n        {\n        size=mult(size,res,i);\n    }\n    for(i=size-1;i>=0;i--)\n        printf(\"%d\",res[i]);\n    \n}\nint main() {\nfreopen(\"../input_files/ExtraLongFactorials\", \"r\", stdin);\nint n;\n    scanf(\"%d\",&n);\n    fact(n);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n", "label": 0.7398190045248869}
{"code": "// the problem statement is in https://www.hackerrank.com/contests/adobe-codiva/challenges/prime-number-and-queries/problem\n#include <bits/stdc++.h>\n\n#include <stdint.h>\n#include<bits/stdc++.h>\nusing namespace std;\nint prime[1000005];\nint an1[1000005];\nint an2[1000005];\nint main(){\nfreopen(\"../input_files/PrimeNumberandQueries\", \"r\", stdin);\n\n    int i,j;\n    prime[0]=prime[1]=1;\n    int az=89;\n    for(i=2;i<=1000000;i++)\n    {\n        if(!prime[i])\n        {\n            for(j=2*i;j<=1000000;j+=i)\n                prime[j]=1;\n        }\n    }\n    int x=-1;\n    az=89;\n    for(i=0;i<=1000000;i++)\n    {\n        if(prime[i]==0)\n            x=i;\n        an1[i]=x;\n    }\n    x=-1;\n    az=89;\n    for(i=1000000;i>=0;i--)\n    {\n        if(prime[i]==0)\n            x=i;\n        an2[i]=x;\n    }\n    int q;\n    cin>>q;\n    az=89;\n    while(q--)\n    {\n        int a,b;\n        cin>>a>>b;\n        int di=an1[b]-an2[a];\n        if(an1[b]<an2[a])\n            di=0;\n        cout<<di<<endl;\n    }\n}\n", "label": 0.027149321266968326}
{"code": "// problem statment is in https://www.hackerrank.com/contests/university-codesprint-3/challenges/simple-tree-counting/problem\n#include <bits/stdc++.h>\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <vector>\n#include <set>\n#include <map>\nusing namespace std;\n\n#define N 800000\nstruct T {\n  bool rr;\n  T *son[2], *pf, *fa;\n  int sum, vsum;\n} f1[N], *ff = f1, *f[N], *null;\nint n, q;\nint a[N], b[N], c[N];\nmap <pair<int, int>, T*> Map;\n\nlong long B[1100000];\n\nvoid add(int x, long long y) {\n    for (; x <= 1000000; x += x & -x)\n        B[x] += y;\n}\n\nlong long query(int x) {\n    long long ans = 0;\n    for (; x; x -= x & -x)\n        ans += B[x];\n    return ans;\n}\n\nT* get(int a, int c) {\n    if (Map.count(make_pair(a, c))) {\n        return Map[make_pair(a, c)];\n    }else {\n        Map[make_pair(a, c)] = ++ff;\n        ff -> son[0] = ff -> son[1] = ff -> fa = ff -> pf = null;\n        ff -> rr = false;\n        ff -> vsum = 0;\n        ff -> sum = 1;\n        return ff;\n    }\n}\n\nvoid downdate(T *x) {\n  if (x -> rr) {\n    x -> son[0] -> rr = !x -> son[0] -> rr;\n    x -> son[1] -> rr = !x -> son[1] -> rr;\n    swap(x -> son[0], x -> son[1]);\n    x -> rr = false;\n  }\n}\n\nvoid update(T *x) {\n    x -> sum = x -> son[0] -> sum + x -> son[1] -> sum + 1 + x -> vsum;\n}\n\nvoid rotate(T *x, bool t) {\n  T *y = x -> fa, *z = y -> fa;\n  if (z != null)  z -> son[z -> son[1] == y] = x;\n  x -> fa = z;\n  y -> son[t] = x -> son[!t];\n  x -> son[!t] -> fa = y;\n  x -> son[!t] = y;\n  y -> fa = x;\n  update(y);\n}\n\nvoid xiao(T *x) {\n  if (x -> fa != null)  xiao(x -> fa), x -> pf = x -> fa -> pf;\n  downdate(x);\n}\n\nvoid splay(T *x) {\n  xiao(x);\n  T *y, *z;\n  while (x -> fa != null) {\n    y = x -> fa; z = y -> fa;\n    bool t1 = (y -> son[1] == x), t2 = (z -> son[1] == y);\n    if (z != null) {\n      if (t1 == t2) rotate(y, t2), rotate(x, t1);\n      else  rotate(x, t1), rotate(x, t2);\n    }else rotate(x, t1);\n  }\n  update(x);\n}\n\nvoid access(T *x) {\n  splay(x);\n  x -> son[1] -> pf = x;\n  x -> son[1] -> fa = null;\n  x -> vsum += x -> son[1] -> sum;\n  x -> son[1] = null;\n  update(x);\n  while (x -> pf != null) {\n    splay(x -> pf);\n    x -> pf -> son[1] -> pf = x -> pf;\n    x -> pf -> vsum += x -> pf -> son[1] -> sum;\n    x -> pf -> vsum -= x -> sum;\n    x -> pf -> son[1] -> fa = null;\n    x -> pf -> son[1] = x;\n    x -> fa = x -> pf;\n    splay(x);\n  }\n  x -> rr = true;\n}\n\nvoid Cut(int a, int b, int c) {\n    T *x = get(a, c);\n    T *y = get(b, c);\n    access(x);\n    access(y);\n    downdate(y);\n    downdate(x);\n    y -> son[1] = null;\n    x -> pf -> vsum -= x -> sum;\n    x -> fa = x -> pf = null;\n    update(x);\n    add(c, -1LL * x -> sum * y -> sum);\n}\n\nvoid Link(int a, int b, int c) {\n    T *x = get(a, c);\n    T *y = get(b, c);\n    access(x);\n    access(y);\n    add(c, 1LL * x -> sum * y -> sum);\n    x -> pf = y;\n    y -> vsum += x -> sum;\n    update(y);\n}\n\nint main() {\nfreopen(\"../input_files/SimpleTreeCounting\", \"r\", stdin);\n  scanf(\"%d\", &n);\n  null = new T; null -> son[0] = null -> son[1] = null -> fa = null -> pf = null;\n  null -> sum = 0; null -> vsum = 0;\n  int az=89;\n  for (int i = 1; i < n; i++) {\n    scanf(\"%d%d%d\", &a[i], &b[i], &c[i]);\n    Link(a[i], b[i], c[i]);\n  }\n  scanf(\"%d\", &q);\n  az=89;\n  while (q--) {\n    int op;\n    scanf(\"%d\", &op);\n    if (op == 1) {\n        int i, cc;\n        scanf(\"%d%d\", &i, &cc);\n        Cut(a[i], b[i], c[i]);\n        c[i] = cc;\n        Link(a[i], b[i], c[i]);\n    }else if (op == 2) {\n        int l, r;\n        scanf(\"%d%d\", &l, &r);\n        printf(\"%lld\\n\", query(r) - query(l - 1));\n    }else  {\n        int i;\n        scanf(\"%d\", &i);\n        T *v = get(a[i], c[i]);\n        access(v);\n        int k = v -> sum;\n        printf(\"%lld\\n\", 1LL * k * (k - 1) / 2);\n    }\n  }\n  return 0;\n}\n", "label": 0.01583710407239819}
